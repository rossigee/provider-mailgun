/*
Copyright 2025 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by angryjet. DO NOT EDIT.

package v1beta1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this SMTPCredential.
func (mg *SMTPCredential) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.ResourceStatus.GetCondition(ct)
}

// GetDeletionPolicy of this SMTPCredential.
func (mg *SMTPCredential) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.ResourceSpec.DeletionPolicy
}

// GetManagementPolicies of this SMTPCredential.
func (mg *SMTPCredential) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ResourceSpec.ManagementPolicies
}

// GetProviderConfigReference of this SMTPCredential.
func (mg *SMTPCredential) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ResourceSpec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this SMTPCredential.
func (mg *SMTPCredential) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.ResourceSpec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this SMTPCredential.
func (mg *SMTPCredential) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.ResourceSpec.WriteConnectionSecretToReference
}

// SetConditions of this SMTPCredential.
func (mg *SMTPCredential) SetConditions(c ...xpv1.Condition) {
	mg.Status.ResourceStatus.SetConditions(c...)
}

// SetDeletionPolicy of this SMTPCredential.
func (mg *SMTPCredential) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.ResourceSpec.DeletionPolicy = r
}

// SetManagementPolicies of this SMTPCredential.
func (mg *SMTPCredential) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ResourceSpec.ManagementPolicies = r
}

// SetProviderConfigReference of this SMTPCredential.
func (mg *SMTPCredential) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ResourceSpec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this SMTPCredential.
func (mg *SMTPCredential) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.ResourceSpec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this SMTPCredential.
func (mg *SMTPCredential) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.ResourceSpec.WriteConnectionSecretToReference = r
}
