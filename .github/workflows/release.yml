name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.24.5'

jobs:
  release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Vendor Dependencies
        run: make vendor vendor.check

      - name: Extract Version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: make build
        env:
          VERSION: ${{ steps.version.outputs.version }}

      - name: Build Docker Image (Version)
        run: |
          # Build container image for specific version
          docker build -t ghcr.io/rossigee/provider-mailgun:${{ steps.version.outputs.version }} \
            --build-arg VERSION=${{ steps.version.outputs.version }} \
            -f cluster/images/provider-mailgun/Dockerfile .

      - name: Build Docker Image (Latest)
        run: |
          # Tag the same image as latest
          docker tag ghcr.io/rossigee/provider-mailgun:${{ steps.version.outputs.version }} \
            ghcr.io/rossigee/provider-mailgun:latest

      - name: Push Docker Images
        run: |
          # Push both version and latest tags
          docker push ghcr.io/rossigee/provider-mailgun:${{ steps.version.outputs.version }}
          docker push ghcr.io/rossigee/provider-mailgun:latest

      - name: Publish Crossplane Packages
        run: |
          # Publish versioned package
          make publish
          # Publish latest package
          make publish VERSION=latest
        env:
          VERSION: ${{ steps.version.outputs.version }}
          REGISTRY_ORGS: ghcr.io/rossigee

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
